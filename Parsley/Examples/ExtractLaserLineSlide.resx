<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="_btn_take_reference.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        v3Bd6V4AAAAASUVORK5CYII=
</value>
  </data>
</root>