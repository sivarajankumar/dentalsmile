<UserControl x:Class="smileUp.Views.PatientDetails"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:smileUp"
             xmlns:views="clr-namespace:smileUp.Views"
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="500" MinWidth="520">

    <UserControl.Resources>
        <ResourceDictionary>

            <!-- Converter for formatting dates to short date format -->
            <local:DateFormattingConverter x:Key="DateFormattingConverter"/>

            <!-- Converter for showing/hiding features based on boolean property -->
            <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

            <!-- Converter for disabling the death related textboxes -->
            <local:NotConverter x:Key="NotConverter"/>

            <!-- Converter for showing/hiding the parents, spouses, and avatar section -->
            <local:ComposingConverter x:Key="ComposingConverter">
                <local:ComposingConverter.Converters>
                    <local:NotConverter/>
                    <local:BoolToVisibilityConverter/>
                </local:ComposingConverter.Converters>
            </local:ComposingConverter>

            <local:ImageConverter x:Key="ImageConverter"/>

            
            <!-- Data provider for binding to the gender types enum values -->
            <ObjectDataProvider x:Key="GenderEnumDS" ObjectType="{x:Type sys:Enum}" MethodName="GetValues">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="local:Gender" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <!-- Animation for expanding the Details Edit section -->
            <Storyboard x:Key="ExpandDetailsEdit" Completed="ExpandDetailsEdit_StoryboardCompleted">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsEdit" Storyboard.TargetProperty="(FrameworkElement.Height)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="545"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsEdit" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.3000000" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsInfo" Storyboard.TargetProperty="(FrameworkElement.Height)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="350"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DetailsAdd" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsList" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.2"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DetailsList" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>

                <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DoneEditButton" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                    <DiscreteBooleanKeyFrame KeyTime="00:00:00.3000000" Value="True"/>
                </BooleanAnimationUsingKeyFrames>
<!--
                <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="EditButton" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                    <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False"/>
                </BooleanAnimationUsingKeyFrames>
-->                
            </Storyboard>

            <!-- Animation for collapsing the Details Edit section -->
            <Storyboard x:Key="CollapseDetailsEdit" Completed="CollapseDetailsEdit_StoryboardCompleted">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="DetailsEdit">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="545"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="DetailsInfo">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="350"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DetailsAdd" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DetailsList" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsList" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.2"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>

                <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DoneEditButton" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                    <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False"/>
                </BooleanAnimationUsingKeyFrames>
<!--
                <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="EditButton" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                    <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True"/>
                </BooleanAnimationUsingKeyFrames>
-->
                </Storyboard>

            <Storyboard x:Key="ExpandDetailsAdd" Completed="ExpandDetailsAdd_StoryboardCompleted">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsAdd" Storyboard.TargetProperty="(FrameworkElement.Height)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="545"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsAdd" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.3000000" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsInfo" Storyboard.TargetProperty="(FrameworkElement.Height)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="350"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DetailsEdit" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DetailsList" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsInfo" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.2"/>
                </DoubleAnimationUsingKeyFrames>
                <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="AddButton" Storyboard.TargetProperty="(Button.IsDefault)">
                    <DiscreteBooleanKeyFrame KeyTime="00:00:00.3000000" Value="True"/>
                </BooleanAnimationUsingKeyFrames>
<!--                <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="EditButton" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                    <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False"/>
                </BooleanAnimationUsingKeyFrames>
                <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InfoButton" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                    <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False"/>
                </BooleanAnimationUsingKeyFrames>
 -->               
            </Storyboard>

            <!-- Animation for collapsing the Details Add section -->
            <Storyboard x:Key="CollapseDetailsAdd" Completed="CollapseDetailsAdd_StoryboardCompleted">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="DetailsAdd">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="545"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsAdd" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.3000000" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="DetailsInfo">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="350"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DetailsEdit" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsInfo" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.2"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DetailsList" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
<!--                <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="EditButton" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                    <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True"/>
                </BooleanAnimationUsingKeyFrames>
                <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InfoButton" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                    <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True"/>
                </BooleanAnimationUsingKeyFrames>
-->                
            </Storyboard>

            <Storyboard x:Key="ExpandDetailsList" Completed="ExpandDetailsList_StoryboardCompleted">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsList" Storyboard.TargetProperty="(FrameworkElement.Height)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="545"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsList" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.3000000" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsList" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.2"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HistoryList" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.3000000" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsInfo" Storyboard.TargetProperty="(FrameworkElement.Height)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="350"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="125"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DetailsEdit" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DetailsAdd" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsInfo" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.2"/>
                </DoubleAnimationUsingKeyFrames>
                <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="AddButton" Storyboard.TargetProperty="(Button.IsDefault)">
                    <DiscreteBooleanKeyFrame KeyTime="00:00:00.3000000" Value="True"/>
                </BooleanAnimationUsingKeyFrames>
<!--                <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="EditButton" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                    <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False"/>
                </BooleanAnimationUsingKeyFrames>
                <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InfoButton" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                    <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False"/>
                </BooleanAnimationUsingKeyFrames>
-->                
            </Storyboard>

            <!-- Animation for collapsing the Details List section -->
            <Storyboard x:Key="CollapseDetailsList" Completed="CollapseDetailsList_StoryboardCompleted">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="DetailsList">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="300"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsList" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.3000000" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HistoryList" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.3000000" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="DetailsInfo">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="125"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="350"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DetailsEdit" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsInfo" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.2"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DetailsAdd" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
<!--                <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="EditButton" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                    <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True"/>
                </BooleanAnimationUsingKeyFrames>
                <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InfoButton" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                    <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True"/>
                </BooleanAnimationUsingKeyFrames>
-->                
            </Storyboard>



            <Storyboard x:Key="ExpandHistoryList" Completed="ExpandHistoryList_StoryboardCompleted">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HistoryList" Storyboard.TargetProperty="(FrameworkElement.Height)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="545"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HistoryList" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.3000000" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsList" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.2"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsInfo" Storyboard.TargetProperty="(FrameworkElement.Height)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="350"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DetailsEdit" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DetailsAdd" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsInfo" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.2"/>
                </DoubleAnimationUsingKeyFrames>
                <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="AddButton" Storyboard.TargetProperty="(Button.IsDefault)">
                    <DiscreteBooleanKeyFrame KeyTime="00:00:00.3000000" Value="True"/>
                </BooleanAnimationUsingKeyFrames>
            </Storyboard>


            <Storyboard x:Key="CollapseHistoryList" Completed="CollapseHistoryList_StoryboardCompleted">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="HistoryList">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="545"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HistoryList" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.3000000" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="DetailsInfo">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="350"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DetailsEdit" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DetailsInfo" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.2"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DetailsAdd" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            
            
            <!-- Filter DetailsList -->
            <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />
            <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
            <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
            <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
            <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

            <!-- This is the default style for all textboxes in this user control -->
            <Style TargetType="{x:Type TextBox}" BasedOn="{x:Null}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="MinWidth" Value="120"/>
                <Setter Property="MinHeight" Value="20"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource TextBoxErrorTemplate}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border 
                  x:Name="Border"
                  CornerRadius="2" 
                  Padding="2"
                  Background="{StaticResource WindowBackgroundBrush}"
                  BorderBrush="{StaticResource SolidBorderBrush}"
                  BorderThickness="1" >
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource InputBackgroundBrush}"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBackgroundBrush}"/>
                                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DetailsSeparatorStyle" TargetType="{x:Type Separator}">
                <Setter Property="Background" Value="#FF6573A0"/>
                <Setter Property="Margin" Value="10,5,10,5"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border SnapsToDevicePixels="true" Height="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <Style x:Key="HeaderedItemsControlStyle" TargetType="{x:Type HeaderedItemsControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type HeaderedItemsControl}">
                            <StackPanel>
                                <Grid>
                                    <Rectangle Fill="{TemplateBinding Background}" />
                                    <ContentPresenter ContentSource="Header" />
                                </Grid>
                                <Grid>
                                    <Rectangle Stroke="{TemplateBinding BorderBrush}" />
                                    <ItemsPresenter Margin="15,0,0,0" />
                                </Grid>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="ExistingPeopleListBoxStyle" TargetType="ListBox">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                <Setter Property="MinWidth" Value="120" />
                <Setter Property="MinHeight" Value="95" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBox">
                            <Border Name="Border" Background="#90FFFFFF" BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="0,0,0,0" CornerRadius="5,5,5,5">
                                <ScrollViewer Margin="0" Focusable="false">
                                    <StackPanel Margin="2" IsItemsHost="True" />
                                </ScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="EditButton">
            <BeginStoryboard Storyboard="{StaticResource ExpandDetailsEdit}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="CloseEditButton">
            <BeginStoryboard x:Name="CollapseDetailsEdit_BeginStoryboard" Storyboard="{StaticResource CollapseDetailsEdit}"/>
        </EventTrigger>
        
      <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="AddButton">
            <BeginStoryboard Storyboard="{StaticResource ExpandDetailsAdd}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="CloseButton">
            <BeginStoryboard x:Name="CollapseDetailsAdd_BeginStoryboard" Storyboard="{StaticResource CollapseDetailsAdd}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="FindButton">
            <BeginStoryboard Storyboard="{StaticResource ExpandDetailsList}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="HideFindButton">
            <BeginStoryboard x:Name="CollapseDetailsList_BeginStoryboard" Storyboard="{StaticResource CollapseDetailsList}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="InfoButton">
            <BeginStoryboard Storyboard="{StaticResource ExpandHistoryList}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="HideHistoryButton">
            <BeginStoryboard x:Name="CollapseHistoryList_BeginStoryboard" Storyboard="{StaticResource CollapseHistoryList}"/>
        </EventTrigger>
    </UserControl.Triggers>
    <DockPanel>
        <!-- Details Header -->
        <Border DockPanel.Dock="Top" x:Name="DetailsHeaderBorder" Background="{DynamicResource BackgroundBrush}" BorderThickness="1,1,1,0" CornerRadius="10,10,0,0" BorderBrush="{DynamicResource BorderBrush}">
            <DockPanel x:Name="DetailsHeader">
                <!-- Star -->
                <Path StrokeThickness="1.500000" Stroke="#ffffffff" StrokeMiterLimit="1.000000" Fill="{DynamicResource PrimaryStarBrush}" Data="F1 M 9.816406,1.694336 L 12.351074,6.830078 L 18.018066,7.654297 L 13.918457,11.654297 L 14.886230,17.299805 L 9.816406,14.630859 L 4.746094,17.299805 L 5.713867,11.654297 L 1.611328,7.654297 L 7.281250,6.830078 L 9.816406,1.694336 Z" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" x:Name="Star"/>
                <Button x:Name="AddButton" Content="_New" FontSize="10" Width="50" Height="20" Click="AddButton_Click" HorizontalAlignment="Right" Margin="0,0,10,0" DockPanel.Dock="Right"  Style="{DynamicResource RedButtonStyle}" />
                <Button x:Name="FindButton" Content="_Find" FontSize="10" Width="50" Height="20" Click="FindButton_Click" HorizontalAlignment="Right" Margin="0,0,10,0" DockPanel.Dock="Right" Style="{DynamicResource RedButtonStyle}" />
                <TextBlock x:Name="NameHeader" Text="{Binding Path=FullName, Mode=Default, FallbackValue=Current Patient}" Style="{DynamicResource HeaderStyle}" FontWeight="Bold" Height="23.94" Margin="5,10,10,10" DockPanel.Dock="Left" TextTrimming="CharacterEllipsis" Foreground="{DynamicResource HeaderFontColor}"/>
            </DockPanel>
        </Border>

        <Border DockPanel.Dock="Top" Background="{DynamicResource PanelGradientBrush}" Style="{DynamicResource BorderStyle}" x:Name="DetailsBodyBorder" BorderThickness="1,0,1,1" CornerRadius="0,0,10,10">
            <DockPanel>
                
                <!-- Details Info displays the information about the person such as the person's photo, name, and birth date. -->
                <Border x:Name="DetailsInfo" DockPanel.Dock="Top" Style="{DynamicResource DetailsBorderStyle}" Margin="0,0,0,0" BorderThickness="0,1,0,0" CornerRadius="0,0,0,0" Padding="0,0,0,0" Height="350" Opacity="1" Background="{x:Null}">
                    <StackPanel Background="{x:Null}" Margin="0,0,0,0" >
                        <Border BorderBrush="{DynamicResource BorderBrush}">
                            <Grid Margin="15,10,15,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="140" MaxWidth="200"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid AllowDrop="True" Background="{x:Null}" Drop="AvatarPhoto_Drop" >
                                    <Border BorderBrush="#02747474" Background="#02000000" HorizontalAlignment="Left" Margin="0,5,0,0" VerticalAlignment="Top" BorderThickness="1,1,1,1" x:Name="AvatarPhotoBorder">
                                        <Border.BitmapEffect>
                                            <DropShadowBitmapEffect ShadowDepth="7" Softness="0.75"/>
                                        </Border.BitmapEffect>
                                        <Image x:Name="Avatar" Source="{Binding Path=Avatar, Converter={StaticResource ImageConverter}, Mode=OneWay}" Stretch="Uniform" VerticalAlignment="Top" MaxWidth="125" MaxHeight="100" HorizontalAlignment="Left" StretchDirection="DownOnly"/>
                                    </Border>
                                    <Border x:Name="NoPhotoBorder" Visibility="{Binding Path=HasAvatar, Converter={StaticResource ComposingConverter}, Mode=Default}"  BorderBrush="#FFFFFFFF" Background="#02FFFFFF" Margin="0,5,5,5">
                                        <Grid>
                                            <Rectangle Fill="{DynamicResource NoPhotoBrush}" Stroke="{x:Null}" x:Name="NoPhotoRectangle">
                                                <Rectangle.BitmapEffect>
                                                    <DropShadowBitmapEffect ShadowDepth="7" Softness="0.75"/>
                                                </Rectangle.BitmapEffect>
                                            </Rectangle>
                                            <TextBlock Visibility="Hidden" HorizontalAlignment="Center" MaxWidth="80" x:Name="DragPhotoTextBlock" VerticalAlignment="Center" FontFamily="Calibri" FontSize="14" FontWeight="Bold" Text="Drag a photo here" TextAlignment="Center" TextWrapping="Wrap" Foreground="{DynamicResource InputFontColor}"/>
                                        </Grid>
                                    </Border>
                                </Grid>
                                <StackPanel Margin="10,0,0,0" Grid.Column="1" HorizontalAlignment="Left">
                                    <Label x:Name="FullNameLabel" Content="Full Name" Target="{Binding ElementName=FirstNameTextBox, Mode=OneWay}" Padding="5,5,5,0" DockPanel.Dock="Top" Margin="0,0,0,4"/>
                                    <TextBlock Text="{Binding Path=FullName, Mode=OneWay, FallbackValue=Full name}" Foreground="{DynamicResource FontColor}" x:Name="FullNameTextBlock" FontWeight="Bold" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" Margin="5,0,0,4" DockPanel.Dock="Top" FontSize="14" />
                                    <Label x:Name="GenderLabel" Content="" Target="{Binding ElementName=GenderTextBox, Mode=OneWay}" Padding="5,5,5,0" DockPanel.Dock="Top" Margin="0,0,0,4"/>
                                    <TextBlock Text="{Binding Path=Gender, Mode=OneWay, FallbackValue=(Gender)}" Foreground="{DynamicResource FontColor}" x:Name="GenderTextBlock" FontWeight="Bold" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" Margin="5,0,0,4" DockPanel.Dock="Top" FontSize="14" />
                                    <Label Content="Born" Target="{Binding ElementName=BirthDateTextBox, Mode=OneWay}" Padding="5,8,5,0"  DockPanel.Dock="Top"  Margin="0,0,0,4"  />
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" MinWidth="40" MaxWidth="100"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding Path=BirthPlace, Mode=OneWay, FallbackValue=Place of Birth}" x:Name="BirthPlaceTextBlock"  Foreground="{DynamicResource FontColor}" FontWeight="Bold"  HorizontalAlignment="Left" Margin="5,0,0,4" DockPanel.Dock="Top" TextTrimming="CharacterEllipsis"  FontSize="14"  />
                                        <TextBlock Grid.Column="1" Text="{Binding Path=BirthDate, Converter={StaticResource DateFormattingConverter}, Mode=OneWay, FallbackValue=Date of Birth}" x:Name="BirthDateTextBlock"  Foreground="{DynamicResource FontColor}" FontWeight="Bold"  HorizontalAlignment="Left" Margin="5,0,0,4" DockPanel.Dock="Top" TextTrimming="CharacterEllipsis"  FontSize="14"  />
                                    </Grid>
                                    <Label Content="Address" Target="{Binding ElementName=Address1TextBox, Mode=OneWay}" Padding="5,8,5,0"  DockPanel.Dock="Top"  Margin="0,0,0,4"  />
                                    <TextBlock Text="{Binding Path=Address1, Mode=OneWay, FallbackValue=Address}" Foreground="{DynamicResource FontColor}" x:Name="Address1TextBlock" FontWeight="Bold" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" Margin="5,0,0,4" DockPanel.Dock="Top" FontSize="14" />
                                    <TextBlock Text="{Binding Path=Address2, Mode=OneWay, FallbackValue=Address}" Foreground="{DynamicResource FontColor}" x:Name="Address2TextBlock" FontWeight="Bold" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" Margin="5,0,0,4" DockPanel.Dock="Top" FontSize="14" />
                                    <TextBlock Text="{Binding Path=City, Mode=OneWay, FallbackValue=City}" Foreground="{DynamicResource FontColor}" x:Name="CityTextBlock" FontWeight="Bold" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" Margin="5,0,0,4" DockPanel.Dock="Top" FontSize="14" />
                                </StackPanel>
                            </Grid>
                        </Border>

                        <Label Margin="15,0,0,0" Content="Edit Person" HorizontalAlignment="Left" Width="95" Height="22.87" BorderThickness="0,0,0,2" Padding="3,2,5,0" Template="{DynamicResource LabelControlTemplate}"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Button Margin="15,0,10,0" x:Name="EditButton" Content="_Edit Data" FontSize="10" Width="75" HorizontalAlignment="Center" Style="{DynamicResource BlackButtonStyle}" Click="EditButton_Click"/>
                            <Button Margin="15,2,10,2" x:Name="InfoButton" Content="_Histories" HorizontalAlignment="Center" Width="75" Style="{DynamicResource BlackButtonStyle}" FontSize="10" Click="InfoButton_Click"/>
                            <Button Margin="15,2,10,2" x:Name="AddTreatmentButton1" Content="_Add Treatment" HorizontalAlignment="Center" Width="75" Style="{DynamicResource BlackButtonStyle}" FontSize="10" Click="AddTreatmentButton_Click"/>
                            <Button Margin="15,2,10,2" x:Name="InvoiceButton" Content="_Invoice" HorizontalAlignment="Center" Width="75" Style="{DynamicResource BlackButtonStyle}" FontSize="10" />
                            <Button Margin="15,2,10,2" x:Name="AppointmentButton" Content="_Appointment" HorizontalAlignment="Center" Width="75" Style="{DynamicResource BlackButtonStyle}" FontSize="10" Click="AppointmentButton_Click"/>
                        </StackPanel>

                    </StackPanel>
                </Border>
                
                <!-- Details Edit is used for modifying the person info -->
                <Border x:Name="DetailsEdit" DockPanel.Dock="Top" Style="{DynamicResource DetailsBorderStyle}" AllowDrop="True" Drop="AvatarPhoto_Drop" Margin="0,0,0,0" Background="{DynamicResource InputBackgroundBrush}" BorderThickness="0,1,0,1" CornerRadius="0,0,0,0" Padding="0,0,0,0" Height="545" Visibility="Visible">
                    <StackPanel Margin="10,5,10,0" HorizontalAlignment="Stretch">
                        <TextBlock Text="Details" TextWrapping="Wrap" Style="{DynamicResource SectionHeaderStyle}" Margin="5,0,0,10" Width="198.067" Height="15.96" HorizontalAlignment="Left" Foreground="{DynamicResource InputFontColor}"/>
                        <StackPanel Orientation="Horizontal">
                            <Border BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1,1,1,1" Margin="5,0,0,0">
                                <Grid>
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="Drag a photo here" Width="80" TextAlignment="Center" TextWrapping="WrapWithOverflow" Style="{DynamicResource AvatarTextBlockStyle}" Foreground="{DynamicResource InputFontColor}"/>
                                    <Image x:Name="AvatarPhoto" AllowDrop="True" Height="75" Width="80" Source="{Binding Path=Avatar, Converter={StaticResource ImageConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </Grid>
                            </Border>
                            <StackPanel Margin="15,0,0,0">
                                <Label Content="Gender" Target="{Binding ElementName=GenderListBox, Mode=OneWay}" Padding="5,0,5,2" Foreground="{DynamicResource InputFontColor}"/>
                                <ListBox KeyboardNavigation.DirectionalNavigation="Cycle" BorderBrush="Transparent" SelectedItem="{Binding Path=Gender, Mode=TwoWay}" x:Name="GenderListBox" Foreground="{DynamicResource InputFontColor}" Background="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,-5,0,0" >                                   
                                    <ListBox.Resources>
                                        <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}" >
                                            <Setter Property="Margin" Value="2, 2, 2, 0" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Border Background="Transparent">
                                                            <RadioButton IsHitTestVisible="False" Focusable="False" Foreground="{Binding Path=Foreground, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                           Content="{TemplateBinding ContentPresenter.Content}"
                                           IsChecked="{Binding Path=IsSelected, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListBox.Resources>
                                    <ListBox.ItemsSource>
                                        <Binding Mode="OneWay" Source="{StaticResource GenderEnumDS}"/>
                                    </ListBox.ItemsSource>
                                </ListBox>
                            </StackPanel>
                        </StackPanel>
                        <Label Content="_First Name" Target="{Binding ElementName=FirstNameEditTextBox, Mode=OneWay}" Foreground="{DynamicResource InputFontColor}" />
                        <TextBox TextWrapping="Wrap" x:Name="FirstNameEditTextBox" HorizontalAlignment="Left" Width="135" Margin="5,0,0,0" Text="{Binding Path=FirstName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Label Content="_Last Name" Target="{Binding ElementName=LastNameEditTextBox, Mode=OneWay}" Foreground="{DynamicResource InputFontColor}" />
                        <TextBox TextWrapping="Wrap" x:Name="LastNameEditTextBox" Width="135" HorizontalAlignment="Left" Margin="5,0,0,0" Text="{Binding Path=LastName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Label Content="_Place of Birth" Target="{Binding ElementName=BirthPlaceEditTextBox, Mode=OneWay}" Foreground="{DynamicResource InputFontColor}" />
                        <TextBox TextWrapping="Wrap" x:Name="BirthPlaceEditTextBox" Text="{Binding Path=BirthPlace, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="135" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                        <Label Content="Date of _Birth" Target="{Binding ElementName=BirthDateEditTextBox, Mode=OneWay}" Foreground="{DynamicResource InputFontColor}" />
                        <DatePicker x:Name="BirthDateEditTextBox" Width="135" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,0,0,0" SelectedDate="{Binding Path=BirthDate, Mode=TwoWay, ValidatesOnExceptions=true, NotifyOnValidationError=true}" />
                        <Label Content="_Address 1" Target="{Binding ElementName=Address1EditTextBox, Mode=OneWay}" Foreground="{DynamicResource InputFontColor}" />
                        <TextBox TextWrapping="Wrap" x:Name="Address1EditTextBox" Text="{Binding Path=Address1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="135" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                        <Label Content="_Address 2" Target="{Binding ElementName=Address2EditTextBox, Mode=OneWay}" Foreground="{DynamicResource InputFontColor}" />
                        <TextBox TextWrapping="Wrap" x:Name="Address2EditTextBox" Text="{Binding Path=Address2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="135" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                        <Label Content="_City" Target="{Binding ElementName=CityEditTextBox, Mode=OneWay}" Foreground="{DynamicResource InputFontColor}" />
                        <TextBox TextWrapping="Wrap" x:Name="CityEditTextBox" Text="{Binding Path=City, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="135" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                        <Label Content="_Phone" Target="{Binding ElementName=PhoneEditTextBox, Mode=OneWay}" Foreground="{DynamicResource InputFontColor}" />
                        <TextBox TextWrapping="Wrap" x:Name="PhoneEditTextBox" Text="{Binding Path=Phone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="135" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                        <Border Margin="0,10,0,0" BorderBrush="#FF6573A0" BorderThickness="0,2,0,0" Height="42">
                            <StackPanel Margin="5,10,0,10" Orientation="Horizontal">
                                <Button Content="_Done" x:Name="DoneEditButton" VerticalAlignment="Bottom" Height="20" IsDefault="True" HorizontalAlignment="Left" Width="60" Click="DoneEditButton_Click" IsCancel="True"/>
                                <Button Content="_Cancel" x:Name="CloseEditButton" VerticalAlignment="Bottom" Height="20" IsDefault="True" HorizontalAlignment="Left" Width="60" IsCancel="True"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </Border>

                <!-- Details Add is used to add new people -->
                <Border x:Name="DetailsAdd" DockPanel.Dock="Top" Style="{DynamicResource DetailsBorderStyle}" Margin="0,0,0,0" BorderThickness="0,1,0,1" CornerRadius="0,0,0,0" Padding="0,0,0,0" Height="300" Background="{DynamicResource InputBackgroundBrush}" Visibility="Visible" >
                    <StackPanel>
                        <TextBlock Margin="15,5,5,5" Text="Add a Patient" TextWrapping="Wrap" Style="{DynamicResource SectionHeaderStyle}" Foreground="{DynamicResource InputFontColor}"/>
                        <StackPanel Orientation="Horizontal">
                            <Border BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1,1,1,1" Margin="5,0,0,0">
                                <Grid>
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="Drag a photo here" Width="80" TextAlignment="Center" TextWrapping="WrapWithOverflow" Style="{DynamicResource AvatarTextBlockStyle}" Foreground="{DynamicResource InputFontColor}"/>
                                    <Image x:Name="AvatarPhotoAdd" AllowDrop="True" Height="75" Width="80" Source="{Binding Path=Avatar, Converter={StaticResource ImageConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </Grid>
                            </Border>
                            <StackPanel Margin="15,0,0,0">
                                <Label Content="Gender" Target="{Binding ElementName=GenderListBox, Mode=OneWay}" Padding="5,0,5,2" Foreground="{DynamicResource InputFontColor}"/>
                                <ListBox KeyboardNavigation.DirectionalNavigation="Cycle" BorderBrush="Transparent" SelectedItem="{Binding Path=Gender, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="GenderAddListBox" Foreground="{DynamicResource InputFontColor}" Background="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,-5,0,0" >
                                    <ListBox.Resources>
                                        <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}" >
                                            <Setter Property="Margin" Value="2, 2, 2, 0" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Border Background="Transparent">
                                                            <RadioButton IsHitTestVisible="False" Focusable="False" Foreground="{Binding Path=Foreground, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                           Content="{TemplateBinding ContentPresenter.Content}"
                                           IsChecked="{Binding Path=IsSelected, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListBox.Resources>
                                    <ListBox.ItemsSource>
                                        <Binding Mode="OneWay" Source="{StaticResource GenderEnumDS}"/>
                                    </ListBox.ItemsSource>
                                </ListBox>
                            </StackPanel>
                        </StackPanel>
                        <Label Content="_First Name" Target="{Binding ElementName=FirstNameAddTextBox, Mode=OneWay}" Foreground="{DynamicResource InputFontColor}" />
                        <TextBox TextWrapping="Wrap" x:Name="FirstNameAddTextBox" HorizontalAlignment="Left" Width="135" Margin="5,0,0,0" Text="{Binding Path=FirstName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Label Content="_Last Name" Target="{Binding ElementName=LastNameAddTextBox, Mode=OneWay}" Foreground="{DynamicResource InputFontColor}" />
                        <TextBox TextWrapping="Wrap" x:Name="LastNameAddTextBox" Width="135" HorizontalAlignment="Left" Margin="5,0,0,0" Text="{Binding Path=LastName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Label Content="_Place of Birth" Target="{Binding ElementName=BirthPlaceAddTextBox, Mode=OneWay}" Foreground="{DynamicResource InputFontColor}" />
                        <TextBox TextWrapping="Wrap" x:Name="BirthPlaceAddTextBox" Text="{Binding Path=BirthPlace, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="135" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                        <Label Content="Date of _Birth" Target="{Binding ElementName=BirthDateAddTextBox, Mode=OneWay}" Foreground="{DynamicResource InputFontColor}" />
                        <DatePicker x:Name="BirthDateAddTextBox" Width="135" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,0,0,0" SelectedDate="{Binding Path=BirthDate, Mode=TwoWay, ValidatesOnExceptions=true, NotifyOnValidationError=true}" />
                        <Label Content="_Address 1" Target="{Binding ElementName=Address1AddTextBox, Mode=OneWay}" Foreground="{DynamicResource InputFontColor}" />
                        <TextBox TextWrapping="Wrap" x:Name="Address1AddTextBox" Text="{Binding Path=Address1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="135" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                        <Label Content="_Address 2" Target="{Binding ElementName=Address2AddTextBox, Mode=OneWay}" Foreground="{DynamicResource InputFontColor}" />
                        <TextBox TextWrapping="Wrap" x:Name="Address2AddTextBox" Text="{Binding Path=Address2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="135" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                        <Label Content="_City" Target="{Binding ElementName=CityAddTextBox, Mode=OneWay}" Foreground="{DynamicResource InputFontColor}" />
                        <TextBox TextWrapping="Wrap" x:Name="CityAddTextBox" Text="{Binding Path=City, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="135" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                        <Label Content="_Phone" Target="{Binding ElementName=PhoneAddTextBox, Mode=OneWay}" Foreground="{DynamicResource InputFontColor}" />
                        <TextBox TextWrapping="Wrap" x:Name="PhoneAddTextBox" Text="{Binding Path=Phone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="135" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                        <Border Margin="0,10,0,0" BorderBrush="#FF6573A0" BorderThickness="0,2,0,0" Height="42">
                            <StackPanel Margin="5,10,0,10" Orientation="Horizontal">
                                <Button Content="_Add" x:Name="SaveButton" VerticalAlignment="Bottom" Height="20" IsDefault="True" HorizontalAlignment="Left" Width="60" Click="SaveButton_Click"/>
                                <Button x:Name="CloseButton" Content="_Cancel" Height="20" IsCancel="True" Width="60" Margin="15,0,0,0" Click="CloseButton_Click" />
                            </StackPanel>
                        </Border>
                           
                    </StackPanel>
                </Border>

                <!-- PatientList -->
                <Border x:Name="DetailsList" DockPanel.Dock="Top" Style="{DynamicResource DetailsBorderStyle}" Background="{x:Null}" BorderThickness="0,1,0,0" CornerRadius="0,0,0,0" Opacity="1" Margin="0,0,0,0" Padding="15,10,5,10">
                    <DockPanel>
                        <DockPanel Margin="0,0,0,8" DockPanel.Dock="Top">
                            <TextBlock Text="Patient (" Style="{DynamicResource SectionHeaderStyle}" Width="46.1366666666667" Height="20" />
                            <TextBlock Text="{Binding Path=Items.Count, ElementName=PatientListView}" FontWeight="Normal" Style="{DynamicResource SectionHeaderStyle}" Height="20" />
                            <TextBlock Text=")" Style="{DynamicResource SectionHeaderStyle}" Width="4.05" Height="20" />
                            <Button x:Name="HideFindButton" Content="Hide" Style="{DynamicResource BlackButtonStyle}" FontSize="10" Click="HideFindButton_Click" HorizontalAlignment="Right" Margin="0,0,10,0" DockPanel.Dock="Right" Width="50" Height="20"/>
                        </DockPanel>
                        <DockPanel HorizontalAlignment="Stretch" DockPanel.Dock="Top">
                            <Label Margin="0,0,5,0" Content="Filter" VerticalAlignment="Center"/>
                            <views:FilterText x:Name="FilterTextBox" TextBoxBase.TextChanged="FilterTextBox_TextChanged" VerticalAlignment="Center" />
                        </DockPanel>
                        <views:PatientDisplayListView x:Name="PatientListView" Background="{x:Null}" Margin="0,10,0,0" BorderBrush="{x:Null}"
              SelectionMode="Single" SelectionChanged="PatientListView_SelectionChanged" ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
              Style="{DynamicResource FamilyListViewStyle}" ScrollViewer.VerticalScrollBarVisibility="Auto"
              VirtualizingStackPanel.IsVirtualizing="True" ScrollViewer.CanContentScroll="True" >
                            <views:PatientDisplayListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}" >
                                    <Setter Property="Template" Value="{DynamicResource FamilyListViewItemTemplate}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                </Style>
                            </views:PatientDisplayListView.ItemContainerStyle>
                            <views:PatientDisplayListView.View>
                                <GridView AllowsColumnReorder="False">
                                    <views:SortListViewColumn SortProperty="FirstName"  Header="FullName" DisplayMemberBinding="{Binding Path=FullName}" Width="115" HeaderContainerStyle="{DynamicResource NameGridViewColumnHeader}"/>
                                    <views:SortListViewColumn SortProperty="Gender"  Header="Gender" Width="40">
                                        <views:SortListViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock HorizontalAlignment="Left" Text="{Binding Path=Gender}" Foreground="{DynamicResource FontColor}" />
                                            </DataTemplate>
                                        </views:SortListViewColumn.CellTemplate>
                                    </views:SortListViewColumn>
                                    <views:SortListViewColumn SortProperty="BirthDate" Header="Born" Width="90">
                                        <views:SortListViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock HorizontalAlignment="Left" Text="{Binding Path=BirthDate, Converter={StaticResource DateFormattingConverter}}" Foreground="{DynamicResource FontColor}" />
                                            </DataTemplate>
                                        </views:SortListViewColumn.CellTemplate>
                                    </views:SortListViewColumn>
                                    <views:SortListViewColumn SortProperty="Address1"  Header="Addrees" DisplayMemberBinding="{Binding Path=Address1}" Width="115" HeaderContainerStyle="{DynamicResource NameGridViewColumnHeader}"/>
                                    <views:SortListViewColumn SortProperty="City"  Header="City" DisplayMemberBinding="{Binding Path=City}" Width="115" HeaderContainerStyle="{DynamicResource NameGridViewColumnHeader}"/>
                                </GridView>
                            </views:PatientDisplayListView.View>
                        </views:PatientDisplayListView>
                    </DockPanel>
                </Border>


                <!-- HistoryList -->
                <Border x:Name="HistoryList" DockPanel.Dock="Top" Style="{DynamicResource DetailsBorderStyle}" Background="{x:Null}" BorderThickness="0,1,0,0" CornerRadius="0,0,0,0" Opacity="1" Margin="0,0,0,0" Padding="15,10,5,10">
                    <Grid DockPanel.Dock="Top" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="250" />
                            <RowDefinition Height="210" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <DockPanel Grid.Row="0">
                        <DockPanel Margin="0,0,0,8" HorizontalAlignment="Stretch" DockPanel.Dock="Top">
                                <TextBlock Text="Treatments ( " Style="{DynamicResource SectionHeaderStyle}" Width="70.1366666666667" Height="20" />
                                <TextBlock Text="{Binding Path=Items.Count, ElementName=HistoryListView}" FontWeight="Normal" Style="{DynamicResource SectionHeaderStyle}" Height="20" />
                                <TextBlock Text=")" Style="{DynamicResource SectionHeaderStyle}" Width="4.05" Height="20" />
                            <Button x:Name="ExpandHistoryButton" Content="Expand" Style="{DynamicResource RedButtonStyle}" FontSize="10" Width="50" Height="20" Click="ExpandHistoryButton_Click"  HorizontalAlignment="Right" Margin="0,0,10,0" DockPanel.Dock="Right" />
                            <Button x:Name="HideHistoryButton" Content="Hide" Style="{DynamicResource BlackButtonStyle}" FontSize="10" Width="50" Height="20" Click="HideHistoryButton_Click"  HorizontalAlignment="Right" Margin="0,0,10,0" DockPanel.Dock="Right"/>
                                <Button x:Name="AddTreatmentButton2" Content="Add Treatment" Style="{DynamicResource NormalButtonStyle}" FontSize="10" Width="110" Height="20" Click="AddTreatmentButton_Click"  HorizontalAlignment="Right" Margin="0,0,10,0" DockPanel.Dock="Right"/>

                            </DockPanel>
                        <DockPanel HorizontalAlignment="Stretch" DockPanel.Dock="Top">
                            <Label Margin="0,0,5,0" Content="Filter" VerticalAlignment="Center"/>
                            <views:FilterText x:Name="FilterHistoryTextBox" TextBoxBase.TextChanged="FilterHistoryTextBox_TextChanged"  VerticalAlignment="Center" />
                        </DockPanel>
                        <views:TreatmentDisplayListView x:Name="HistoryListView" Background="{x:Null}" Margin="0,10,0,0" BorderBrush="{x:Null}"
              SelectionMode="Single" SelectionChanged="HistoryListView_SelectionChanged"  ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
              Style="{DynamicResource FamilyListViewStyle}" ScrollViewer.VerticalScrollBarVisibility="Auto"
              VirtualizingStackPanel.IsVirtualizing="True" ScrollViewer.CanContentScroll="True" >
                            <views:TreatmentDisplayListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}" >
                                    <Setter Property="Template" Value="{DynamicResource FamilyListViewItemTemplate}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                </Style>
                            </views:TreatmentDisplayListView.ItemContainerStyle>
                            <views:TreatmentDisplayListView.View>
                                <GridView AllowsColumnReorder="False">
                                    <views:SortListViewColumn SortProperty="Id"  Header="Id" DisplayMemberBinding="{Binding Path=Id}" Width="90" HeaderContainerStyle="{DynamicResource NameGridViewColumnHeader}"/>
                                    <views:SortListViewColumn SortProperty="Phase"  Header="Phase" Width="90">
                                        <views:SortListViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock HorizontalAlignment="Left" Text="{Binding Path=Phase.Name}" Foreground="{DynamicResource FontColor}" />
                                            </DataTemplate>
                                        </views:SortListViewColumn.CellTemplate>
                                    </views:SortListViewColumn>
                                    <views:SortListViewColumn SortProperty="TreatmentDate" Header="Treatment Date" Width="70">
                                        <views:SortListViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock HorizontalAlignment="Left" Text="{Binding Path=TreatmentDate, Converter={StaticResource DateFormattingConverter}}" Foreground="{DynamicResource FontColor}" />
                                            </DataTemplate>
                                        </views:SortListViewColumn.CellTemplate>
                                    </views:SortListViewColumn>
                                    <views:SortListViewColumn SortProperty="TreatmentTime" Header="Time" Width="70">
                                        <views:SortListViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock HorizontalAlignment="Left" Text="{Binding Path=TreatmentTime}" Foreground="{DynamicResource FontColor}" />
                                            </DataTemplate>
                                        </views:SortListViewColumn.CellTemplate>
                                    </views:SortListViewColumn>
                                    <views:SortListViewColumn SortProperty="Room"  Header="Room" DisplayMemberBinding="{Binding Path=Room}" Width="35" HeaderContainerStyle="{DynamicResource NameGridViewColumnHeader}"/>
                                    <views:SortListViewColumn SortProperty="Dentist"  Header="Dentist" DisplayMemberBinding="{Binding Path=Dentist.FullName}" Width="90" HeaderContainerStyle="{DynamicResource NameGridViewColumnHeader}"/>
                                </GridView>
                            </views:TreatmentDisplayListView.View>
                        </views:TreatmentDisplayListView>

                    </DockPanel>
                        <DockPanel Grid.Row="1" >
                            <DockPanel HorizontalAlignment="Stretch" DockPanel.Dock="Top">
                            <Label Margin="0,0,5,0" Content="Filter" VerticalAlignment="Center"/>
                            <views:FilterText x:Name="FilterHistoryFileTextBox" TextBoxBase.TextChanged="FilterHistoryFileTextBox_TextChanged"  VerticalAlignment="Center" />
                        </DockPanel>
                            <views:FileDisplayListView x:Name="HistoryFileListView" Background="{x:Null}" Margin="0,10,0,0" BorderBrush="{x:Null}"
              SelectionMode="Single" SelectionChanged="HistoryFileListView_SelectionChanged"  ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
              Style="{DynamicResource FamilyListViewStyle}" ScrollViewer.VerticalScrollBarVisibility="Auto"
              VirtualizingStackPanel.IsVirtualizing="True" ScrollViewer.CanContentScroll="True">
                                <views:FileDisplayListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}" >
                                    <Setter Property="Template" Value="{DynamicResource FamilyListViewItemTemplate}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                </Style>
                                </views:FileDisplayListView.ItemContainerStyle>
                                <views:FileDisplayListView.View>
                                <GridView AllowsColumnReorder="False">
                                    <views:SortListViewColumn SortProperty="Id"  Header="Id" DisplayMemberBinding="{Binding Path=Id}" Width="90" HeaderContainerStyle="{DynamicResource NameGridViewColumnHeader}"/>
                                    <views:SortListViewColumn SortProperty="Phase"  Header="Phase" Width="90">
                                        <views:SortListViewColumn.CellTemplate>
                                            <DataTemplate>
                                                    <TextBlock HorizontalAlignment="Left" Text="{Binding Path=Phase.Name}" Foreground="{DynamicResource FontColor}" />
                                            </DataTemplate>
                                        </views:SortListViewColumn.CellTemplate>
                                    </views:SortListViewColumn>
                                        <views:SortListViewColumn SortProperty="FileName" Header="FileName" Width="70">
                                        <views:SortListViewColumn.CellTemplate>
                                            <DataTemplate>
                                                    <TextBlock HorizontalAlignment="Left" Text="{Binding Path=FileName}" Foreground="{DynamicResource FontColor}" />
                                            </DataTemplate>
                                        </views:SortListViewColumn.CellTemplate>
                                    </views:SortListViewColumn>
                                        <views:SortListViewColumn SortProperty="Screenshot" Header="Screenshot" Width="70">
                                        <views:SortListViewColumn.CellTemplate>
                                            <DataTemplate>
                                                    <Image Source="{Binding Path=GetScreenshot }"/>
                                            </DataTemplate>
                                        </views:SortListViewColumn.CellTemplate>
                                    </views:SortListViewColumn>
                                </GridView>
                                </views:FileDisplayListView.View>
                            </views:FileDisplayListView>

                        </DockPanel>
                        <!-- group button scanning, manipulation -->
                        <DockPanel Grid.Row="2">
                            <StackPanel Orientation="Vertical">
                                <Label Margin="0,0,5,0" Content="" HorizontalAlignment="Center"/>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Button Margin="15,0,10,0" x:Name="btnNewScan" Content="Scan_3D New" FontSize="10" Width="110" HorizontalAlignment="Center" Style="{DynamicResource NormalButtonStyle}"/>
                                    <Button Margin="15,0,10,0" x:Name="btnContinueManipulation" Content="Contin_ue Manipulation" FontSize="10" Width="110" HorizontalAlignment="Center" Style="{DynamicResource NormalButtonStyle}" Click="btnContinueManipulation_Click"/>
                                    <Button Margin="15,0,10,0" x:Name="btnStartManipulation" Content="Start _Manipulation" FontSize="10" Width="110" HorizontalAlignment="Center" Style="{DynamicResource NormalButtonStyle}" Click="btnStartManipulation_Click"/>
                                </StackPanel>
                            </StackPanel>
                        </DockPanel>
                    </Grid>
                </Border>
            </DockPanel>
        </Border>
        <Border VerticalAlignment="Top" DockPanel.Dock="Top" Margin="0,5,0,5">
        </Border>
        <views:Welcome />
    </DockPanel>
</UserControl>
